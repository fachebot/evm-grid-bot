// Code generated by ent, DO NOT EDIT.

package settings

import (
	"time"

	"github.com/fachebot/evm-grid-bot/internal/ent/predicate"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Settings {
	return predicate.Settings(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Settings {
	return predicate.Settings(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Settings {
	return predicate.Settings(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Settings {
	return predicate.Settings(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Settings {
	return predicate.Settings(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Settings {
	return predicate.Settings(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Settings {
	return predicate.Settings(sql.FieldLTE(FieldID, id))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldCreateTime, v))
}

// UpdateTime applies equality check predicate on the "update_time" field. It's identical to UpdateTimeEQ.
func UpdateTime(v time.Time) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldUpdateTime, v))
}

// UserId applies equality check predicate on the "userId" field. It's identical to UserIdEQ.
func UserId(v int64) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldUserId, v))
}

// SlippageBps applies equality check predicate on the "slippageBps" field. It's identical to SlippageBpsEQ.
func SlippageBps(v int) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldSlippageBps, v))
}

// SellSlippageBps applies equality check predicate on the "sellSlippageBps" field. It's identical to SellSlippageBpsEQ.
func SellSlippageBps(v int) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldSellSlippageBps, v))
}

// ExitSlippageBps applies equality check predicate on the "exitSlippageBps" field. It's identical to ExitSlippageBpsEQ.
func ExitSlippageBps(v int) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldExitSlippageBps, v))
}

// EnableInfiniteApproval applies equality check predicate on the "enableInfiniteApproval" field. It's identical to EnableInfiniteApprovalEQ.
func EnableInfiniteApproval(v bool) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldEnableInfiniteApproval, v))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.Settings {
	return predicate.Settings(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.Settings {
	return predicate.Settings(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.Settings {
	return predicate.Settings(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.Settings {
	return predicate.Settings(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.Settings {
	return predicate.Settings(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.Settings {
	return predicate.Settings(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.Settings {
	return predicate.Settings(sql.FieldLTE(FieldCreateTime, v))
}

// UpdateTimeEQ applies the EQ predicate on the "update_time" field.
func UpdateTimeEQ(v time.Time) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldUpdateTime, v))
}

// UpdateTimeNEQ applies the NEQ predicate on the "update_time" field.
func UpdateTimeNEQ(v time.Time) predicate.Settings {
	return predicate.Settings(sql.FieldNEQ(FieldUpdateTime, v))
}

// UpdateTimeIn applies the In predicate on the "update_time" field.
func UpdateTimeIn(vs ...time.Time) predicate.Settings {
	return predicate.Settings(sql.FieldIn(FieldUpdateTime, vs...))
}

// UpdateTimeNotIn applies the NotIn predicate on the "update_time" field.
func UpdateTimeNotIn(vs ...time.Time) predicate.Settings {
	return predicate.Settings(sql.FieldNotIn(FieldUpdateTime, vs...))
}

// UpdateTimeGT applies the GT predicate on the "update_time" field.
func UpdateTimeGT(v time.Time) predicate.Settings {
	return predicate.Settings(sql.FieldGT(FieldUpdateTime, v))
}

// UpdateTimeGTE applies the GTE predicate on the "update_time" field.
func UpdateTimeGTE(v time.Time) predicate.Settings {
	return predicate.Settings(sql.FieldGTE(FieldUpdateTime, v))
}

// UpdateTimeLT applies the LT predicate on the "update_time" field.
func UpdateTimeLT(v time.Time) predicate.Settings {
	return predicate.Settings(sql.FieldLT(FieldUpdateTime, v))
}

// UpdateTimeLTE applies the LTE predicate on the "update_time" field.
func UpdateTimeLTE(v time.Time) predicate.Settings {
	return predicate.Settings(sql.FieldLTE(FieldUpdateTime, v))
}

// UserIdEQ applies the EQ predicate on the "userId" field.
func UserIdEQ(v int64) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldUserId, v))
}

// UserIdNEQ applies the NEQ predicate on the "userId" field.
func UserIdNEQ(v int64) predicate.Settings {
	return predicate.Settings(sql.FieldNEQ(FieldUserId, v))
}

// UserIdIn applies the In predicate on the "userId" field.
func UserIdIn(vs ...int64) predicate.Settings {
	return predicate.Settings(sql.FieldIn(FieldUserId, vs...))
}

// UserIdNotIn applies the NotIn predicate on the "userId" field.
func UserIdNotIn(vs ...int64) predicate.Settings {
	return predicate.Settings(sql.FieldNotIn(FieldUserId, vs...))
}

// UserIdGT applies the GT predicate on the "userId" field.
func UserIdGT(v int64) predicate.Settings {
	return predicate.Settings(sql.FieldGT(FieldUserId, v))
}

// UserIdGTE applies the GTE predicate on the "userId" field.
func UserIdGTE(v int64) predicate.Settings {
	return predicate.Settings(sql.FieldGTE(FieldUserId, v))
}

// UserIdLT applies the LT predicate on the "userId" field.
func UserIdLT(v int64) predicate.Settings {
	return predicate.Settings(sql.FieldLT(FieldUserId, v))
}

// UserIdLTE applies the LTE predicate on the "userId" field.
func UserIdLTE(v int64) predicate.Settings {
	return predicate.Settings(sql.FieldLTE(FieldUserId, v))
}

// SlippageBpsEQ applies the EQ predicate on the "slippageBps" field.
func SlippageBpsEQ(v int) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldSlippageBps, v))
}

// SlippageBpsNEQ applies the NEQ predicate on the "slippageBps" field.
func SlippageBpsNEQ(v int) predicate.Settings {
	return predicate.Settings(sql.FieldNEQ(FieldSlippageBps, v))
}

// SlippageBpsIn applies the In predicate on the "slippageBps" field.
func SlippageBpsIn(vs ...int) predicate.Settings {
	return predicate.Settings(sql.FieldIn(FieldSlippageBps, vs...))
}

// SlippageBpsNotIn applies the NotIn predicate on the "slippageBps" field.
func SlippageBpsNotIn(vs ...int) predicate.Settings {
	return predicate.Settings(sql.FieldNotIn(FieldSlippageBps, vs...))
}

// SlippageBpsGT applies the GT predicate on the "slippageBps" field.
func SlippageBpsGT(v int) predicate.Settings {
	return predicate.Settings(sql.FieldGT(FieldSlippageBps, v))
}

// SlippageBpsGTE applies the GTE predicate on the "slippageBps" field.
func SlippageBpsGTE(v int) predicate.Settings {
	return predicate.Settings(sql.FieldGTE(FieldSlippageBps, v))
}

// SlippageBpsLT applies the LT predicate on the "slippageBps" field.
func SlippageBpsLT(v int) predicate.Settings {
	return predicate.Settings(sql.FieldLT(FieldSlippageBps, v))
}

// SlippageBpsLTE applies the LTE predicate on the "slippageBps" field.
func SlippageBpsLTE(v int) predicate.Settings {
	return predicate.Settings(sql.FieldLTE(FieldSlippageBps, v))
}

// SellSlippageBpsEQ applies the EQ predicate on the "sellSlippageBps" field.
func SellSlippageBpsEQ(v int) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldSellSlippageBps, v))
}

// SellSlippageBpsNEQ applies the NEQ predicate on the "sellSlippageBps" field.
func SellSlippageBpsNEQ(v int) predicate.Settings {
	return predicate.Settings(sql.FieldNEQ(FieldSellSlippageBps, v))
}

// SellSlippageBpsIn applies the In predicate on the "sellSlippageBps" field.
func SellSlippageBpsIn(vs ...int) predicate.Settings {
	return predicate.Settings(sql.FieldIn(FieldSellSlippageBps, vs...))
}

// SellSlippageBpsNotIn applies the NotIn predicate on the "sellSlippageBps" field.
func SellSlippageBpsNotIn(vs ...int) predicate.Settings {
	return predicate.Settings(sql.FieldNotIn(FieldSellSlippageBps, vs...))
}

// SellSlippageBpsGT applies the GT predicate on the "sellSlippageBps" field.
func SellSlippageBpsGT(v int) predicate.Settings {
	return predicate.Settings(sql.FieldGT(FieldSellSlippageBps, v))
}

// SellSlippageBpsGTE applies the GTE predicate on the "sellSlippageBps" field.
func SellSlippageBpsGTE(v int) predicate.Settings {
	return predicate.Settings(sql.FieldGTE(FieldSellSlippageBps, v))
}

// SellSlippageBpsLT applies the LT predicate on the "sellSlippageBps" field.
func SellSlippageBpsLT(v int) predicate.Settings {
	return predicate.Settings(sql.FieldLT(FieldSellSlippageBps, v))
}

// SellSlippageBpsLTE applies the LTE predicate on the "sellSlippageBps" field.
func SellSlippageBpsLTE(v int) predicate.Settings {
	return predicate.Settings(sql.FieldLTE(FieldSellSlippageBps, v))
}

// SellSlippageBpsIsNil applies the IsNil predicate on the "sellSlippageBps" field.
func SellSlippageBpsIsNil() predicate.Settings {
	return predicate.Settings(sql.FieldIsNull(FieldSellSlippageBps))
}

// SellSlippageBpsNotNil applies the NotNil predicate on the "sellSlippageBps" field.
func SellSlippageBpsNotNil() predicate.Settings {
	return predicate.Settings(sql.FieldNotNull(FieldSellSlippageBps))
}

// ExitSlippageBpsEQ applies the EQ predicate on the "exitSlippageBps" field.
func ExitSlippageBpsEQ(v int) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldExitSlippageBps, v))
}

// ExitSlippageBpsNEQ applies the NEQ predicate on the "exitSlippageBps" field.
func ExitSlippageBpsNEQ(v int) predicate.Settings {
	return predicate.Settings(sql.FieldNEQ(FieldExitSlippageBps, v))
}

// ExitSlippageBpsIn applies the In predicate on the "exitSlippageBps" field.
func ExitSlippageBpsIn(vs ...int) predicate.Settings {
	return predicate.Settings(sql.FieldIn(FieldExitSlippageBps, vs...))
}

// ExitSlippageBpsNotIn applies the NotIn predicate on the "exitSlippageBps" field.
func ExitSlippageBpsNotIn(vs ...int) predicate.Settings {
	return predicate.Settings(sql.FieldNotIn(FieldExitSlippageBps, vs...))
}

// ExitSlippageBpsGT applies the GT predicate on the "exitSlippageBps" field.
func ExitSlippageBpsGT(v int) predicate.Settings {
	return predicate.Settings(sql.FieldGT(FieldExitSlippageBps, v))
}

// ExitSlippageBpsGTE applies the GTE predicate on the "exitSlippageBps" field.
func ExitSlippageBpsGTE(v int) predicate.Settings {
	return predicate.Settings(sql.FieldGTE(FieldExitSlippageBps, v))
}

// ExitSlippageBpsLT applies the LT predicate on the "exitSlippageBps" field.
func ExitSlippageBpsLT(v int) predicate.Settings {
	return predicate.Settings(sql.FieldLT(FieldExitSlippageBps, v))
}

// ExitSlippageBpsLTE applies the LTE predicate on the "exitSlippageBps" field.
func ExitSlippageBpsLTE(v int) predicate.Settings {
	return predicate.Settings(sql.FieldLTE(FieldExitSlippageBps, v))
}

// ExitSlippageBpsIsNil applies the IsNil predicate on the "exitSlippageBps" field.
func ExitSlippageBpsIsNil() predicate.Settings {
	return predicate.Settings(sql.FieldIsNull(FieldExitSlippageBps))
}

// ExitSlippageBpsNotNil applies the NotNil predicate on the "exitSlippageBps" field.
func ExitSlippageBpsNotNil() predicate.Settings {
	return predicate.Settings(sql.FieldNotNull(FieldExitSlippageBps))
}

// DexAggregatorEQ applies the EQ predicate on the "dexAggregator" field.
func DexAggregatorEQ(v DexAggregator) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldDexAggregator, v))
}

// DexAggregatorNEQ applies the NEQ predicate on the "dexAggregator" field.
func DexAggregatorNEQ(v DexAggregator) predicate.Settings {
	return predicate.Settings(sql.FieldNEQ(FieldDexAggregator, v))
}

// DexAggregatorIn applies the In predicate on the "dexAggregator" field.
func DexAggregatorIn(vs ...DexAggregator) predicate.Settings {
	return predicate.Settings(sql.FieldIn(FieldDexAggregator, vs...))
}

// DexAggregatorNotIn applies the NotIn predicate on the "dexAggregator" field.
func DexAggregatorNotIn(vs ...DexAggregator) predicate.Settings {
	return predicate.Settings(sql.FieldNotIn(FieldDexAggregator, vs...))
}

// EnableInfiniteApprovalEQ applies the EQ predicate on the "enableInfiniteApproval" field.
func EnableInfiniteApprovalEQ(v bool) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldEnableInfiniteApproval, v))
}

// EnableInfiniteApprovalNEQ applies the NEQ predicate on the "enableInfiniteApproval" field.
func EnableInfiniteApprovalNEQ(v bool) predicate.Settings {
	return predicate.Settings(sql.FieldNEQ(FieldEnableInfiniteApproval, v))
}

// EnableInfiniteApprovalIsNil applies the IsNil predicate on the "enableInfiniteApproval" field.
func EnableInfiniteApprovalIsNil() predicate.Settings {
	return predicate.Settings(sql.FieldIsNull(FieldEnableInfiniteApproval))
}

// EnableInfiniteApprovalNotNil applies the NotNil predicate on the "enableInfiniteApproval" field.
func EnableInfiniteApprovalNotNil() predicate.Settings {
	return predicate.Settings(sql.FieldNotNull(FieldEnableInfiniteApproval))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Settings) predicate.Settings {
	return predicate.Settings(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Settings) predicate.Settings {
	return predicate.Settings(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Settings) predicate.Settings {
	return predicate.Settings(sql.NotPredicates(p))
}
