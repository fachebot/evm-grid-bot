// Code generated by ent, DO NOT EDIT.

package order

import (
	"time"

	"github.com/fachebot/evm-grid-bot/internal/ent/predicate"

	"entgo.io/ent/dialect/sql"
	"github.com/shopspring/decimal"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldID, id))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldCreateTime, v))
}

// UpdateTime applies equality check predicate on the "update_time" field. It's identical to UpdateTimeEQ.
func UpdateTime(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldUpdateTime, v))
}

// Account applies equality check predicate on the "account" field. It's identical to AccountEQ.
func Account(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldAccount, v))
}

// Token applies equality check predicate on the "token" field. It's identical to TokenEQ.
func Token(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldToken, v))
}

// Symbol applies equality check predicate on the "symbol" field. It's identical to SymbolEQ.
func Symbol(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldSymbol, v))
}

// GridId applies equality check predicate on the "gridId" field. It's identical to GridIdEQ.
func GridId(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldGridId, v))
}

// GridNumber applies equality check predicate on the "gridNumber" field. It's identical to GridNumberEQ.
func GridNumber(v int) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldGridNumber, v))
}

// GridBuyCost applies equality check predicate on the "gridBuyCost" field. It's identical to GridBuyCostEQ.
func GridBuyCost(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldGridBuyCost, v))
}

// StrategyId applies equality check predicate on the "strategyId" field. It's identical to StrategyIdEQ.
func StrategyId(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldStrategyId, v))
}

// Price applies equality check predicate on the "price" field. It's identical to PriceEQ.
func Price(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldPrice, v))
}

// FinalPrice applies equality check predicate on the "finalPrice" field. It's identical to FinalPriceEQ.
func FinalPrice(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldFinalPrice, v))
}

// InAmount applies equality check predicate on the "inAmount" field. It's identical to InAmountEQ.
func InAmount(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldInAmount, v))
}

// OutAmount applies equality check predicate on the "outAmount" field. It's identical to OutAmountEQ.
func OutAmount(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldOutAmount, v))
}

// Nonce applies equality check predicate on the "nonce" field. It's identical to NonceEQ.
func Nonce(v uint64) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldNonce, v))
}

// TxHash applies equality check predicate on the "txHash" field. It's identical to TxHashEQ.
func TxHash(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldTxHash, v))
}

// Reason applies equality check predicate on the "reason" field. It's identical to ReasonEQ.
func Reason(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldReason, v))
}

// Profit applies equality check predicate on the "profit" field. It's identical to ProfitEQ.
func Profit(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldProfit, v))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldCreateTime, v))
}

// UpdateTimeEQ applies the EQ predicate on the "update_time" field.
func UpdateTimeEQ(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldUpdateTime, v))
}

// UpdateTimeNEQ applies the NEQ predicate on the "update_time" field.
func UpdateTimeNEQ(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldUpdateTime, v))
}

// UpdateTimeIn applies the In predicate on the "update_time" field.
func UpdateTimeIn(vs ...time.Time) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldUpdateTime, vs...))
}

// UpdateTimeNotIn applies the NotIn predicate on the "update_time" field.
func UpdateTimeNotIn(vs ...time.Time) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldUpdateTime, vs...))
}

// UpdateTimeGT applies the GT predicate on the "update_time" field.
func UpdateTimeGT(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldUpdateTime, v))
}

// UpdateTimeGTE applies the GTE predicate on the "update_time" field.
func UpdateTimeGTE(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldUpdateTime, v))
}

// UpdateTimeLT applies the LT predicate on the "update_time" field.
func UpdateTimeLT(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldUpdateTime, v))
}

// UpdateTimeLTE applies the LTE predicate on the "update_time" field.
func UpdateTimeLTE(v time.Time) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldUpdateTime, v))
}

// AccountEQ applies the EQ predicate on the "account" field.
func AccountEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldAccount, v))
}

// AccountNEQ applies the NEQ predicate on the "account" field.
func AccountNEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldAccount, v))
}

// AccountIn applies the In predicate on the "account" field.
func AccountIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldAccount, vs...))
}

// AccountNotIn applies the NotIn predicate on the "account" field.
func AccountNotIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldAccount, vs...))
}

// AccountGT applies the GT predicate on the "account" field.
func AccountGT(v string) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldAccount, v))
}

// AccountGTE applies the GTE predicate on the "account" field.
func AccountGTE(v string) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldAccount, v))
}

// AccountLT applies the LT predicate on the "account" field.
func AccountLT(v string) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldAccount, v))
}

// AccountLTE applies the LTE predicate on the "account" field.
func AccountLTE(v string) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldAccount, v))
}

// AccountContains applies the Contains predicate on the "account" field.
func AccountContains(v string) predicate.Order {
	return predicate.Order(sql.FieldContains(FieldAccount, v))
}

// AccountHasPrefix applies the HasPrefix predicate on the "account" field.
func AccountHasPrefix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasPrefix(FieldAccount, v))
}

// AccountHasSuffix applies the HasSuffix predicate on the "account" field.
func AccountHasSuffix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasSuffix(FieldAccount, v))
}

// AccountEqualFold applies the EqualFold predicate on the "account" field.
func AccountEqualFold(v string) predicate.Order {
	return predicate.Order(sql.FieldEqualFold(FieldAccount, v))
}

// AccountContainsFold applies the ContainsFold predicate on the "account" field.
func AccountContainsFold(v string) predicate.Order {
	return predicate.Order(sql.FieldContainsFold(FieldAccount, v))
}

// TokenEQ applies the EQ predicate on the "token" field.
func TokenEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldToken, v))
}

// TokenNEQ applies the NEQ predicate on the "token" field.
func TokenNEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldToken, v))
}

// TokenIn applies the In predicate on the "token" field.
func TokenIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldToken, vs...))
}

// TokenNotIn applies the NotIn predicate on the "token" field.
func TokenNotIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldToken, vs...))
}

// TokenGT applies the GT predicate on the "token" field.
func TokenGT(v string) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldToken, v))
}

// TokenGTE applies the GTE predicate on the "token" field.
func TokenGTE(v string) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldToken, v))
}

// TokenLT applies the LT predicate on the "token" field.
func TokenLT(v string) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldToken, v))
}

// TokenLTE applies the LTE predicate on the "token" field.
func TokenLTE(v string) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldToken, v))
}

// TokenContains applies the Contains predicate on the "token" field.
func TokenContains(v string) predicate.Order {
	return predicate.Order(sql.FieldContains(FieldToken, v))
}

// TokenHasPrefix applies the HasPrefix predicate on the "token" field.
func TokenHasPrefix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasPrefix(FieldToken, v))
}

// TokenHasSuffix applies the HasSuffix predicate on the "token" field.
func TokenHasSuffix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasSuffix(FieldToken, v))
}

// TokenEqualFold applies the EqualFold predicate on the "token" field.
func TokenEqualFold(v string) predicate.Order {
	return predicate.Order(sql.FieldEqualFold(FieldToken, v))
}

// TokenContainsFold applies the ContainsFold predicate on the "token" field.
func TokenContainsFold(v string) predicate.Order {
	return predicate.Order(sql.FieldContainsFold(FieldToken, v))
}

// SymbolEQ applies the EQ predicate on the "symbol" field.
func SymbolEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldSymbol, v))
}

// SymbolNEQ applies the NEQ predicate on the "symbol" field.
func SymbolNEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldSymbol, v))
}

// SymbolIn applies the In predicate on the "symbol" field.
func SymbolIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldSymbol, vs...))
}

// SymbolNotIn applies the NotIn predicate on the "symbol" field.
func SymbolNotIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldSymbol, vs...))
}

// SymbolGT applies the GT predicate on the "symbol" field.
func SymbolGT(v string) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldSymbol, v))
}

// SymbolGTE applies the GTE predicate on the "symbol" field.
func SymbolGTE(v string) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldSymbol, v))
}

// SymbolLT applies the LT predicate on the "symbol" field.
func SymbolLT(v string) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldSymbol, v))
}

// SymbolLTE applies the LTE predicate on the "symbol" field.
func SymbolLTE(v string) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldSymbol, v))
}

// SymbolContains applies the Contains predicate on the "symbol" field.
func SymbolContains(v string) predicate.Order {
	return predicate.Order(sql.FieldContains(FieldSymbol, v))
}

// SymbolHasPrefix applies the HasPrefix predicate on the "symbol" field.
func SymbolHasPrefix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasPrefix(FieldSymbol, v))
}

// SymbolHasSuffix applies the HasSuffix predicate on the "symbol" field.
func SymbolHasSuffix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasSuffix(FieldSymbol, v))
}

// SymbolEqualFold applies the EqualFold predicate on the "symbol" field.
func SymbolEqualFold(v string) predicate.Order {
	return predicate.Order(sql.FieldEqualFold(FieldSymbol, v))
}

// SymbolContainsFold applies the ContainsFold predicate on the "symbol" field.
func SymbolContainsFold(v string) predicate.Order {
	return predicate.Order(sql.FieldContainsFold(FieldSymbol, v))
}

// GridIdEQ applies the EQ predicate on the "gridId" field.
func GridIdEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldGridId, v))
}

// GridIdNEQ applies the NEQ predicate on the "gridId" field.
func GridIdNEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldGridId, v))
}

// GridIdIn applies the In predicate on the "gridId" field.
func GridIdIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldGridId, vs...))
}

// GridIdNotIn applies the NotIn predicate on the "gridId" field.
func GridIdNotIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldGridId, vs...))
}

// GridIdGT applies the GT predicate on the "gridId" field.
func GridIdGT(v string) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldGridId, v))
}

// GridIdGTE applies the GTE predicate on the "gridId" field.
func GridIdGTE(v string) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldGridId, v))
}

// GridIdLT applies the LT predicate on the "gridId" field.
func GridIdLT(v string) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldGridId, v))
}

// GridIdLTE applies the LTE predicate on the "gridId" field.
func GridIdLTE(v string) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldGridId, v))
}

// GridIdContains applies the Contains predicate on the "gridId" field.
func GridIdContains(v string) predicate.Order {
	return predicate.Order(sql.FieldContains(FieldGridId, v))
}

// GridIdHasPrefix applies the HasPrefix predicate on the "gridId" field.
func GridIdHasPrefix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasPrefix(FieldGridId, v))
}

// GridIdHasSuffix applies the HasSuffix predicate on the "gridId" field.
func GridIdHasSuffix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasSuffix(FieldGridId, v))
}

// GridIdIsNil applies the IsNil predicate on the "gridId" field.
func GridIdIsNil() predicate.Order {
	return predicate.Order(sql.FieldIsNull(FieldGridId))
}

// GridIdNotNil applies the NotNil predicate on the "gridId" field.
func GridIdNotNil() predicate.Order {
	return predicate.Order(sql.FieldNotNull(FieldGridId))
}

// GridIdEqualFold applies the EqualFold predicate on the "gridId" field.
func GridIdEqualFold(v string) predicate.Order {
	return predicate.Order(sql.FieldEqualFold(FieldGridId, v))
}

// GridIdContainsFold applies the ContainsFold predicate on the "gridId" field.
func GridIdContainsFold(v string) predicate.Order {
	return predicate.Order(sql.FieldContainsFold(FieldGridId, v))
}

// GridNumberEQ applies the EQ predicate on the "gridNumber" field.
func GridNumberEQ(v int) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldGridNumber, v))
}

// GridNumberNEQ applies the NEQ predicate on the "gridNumber" field.
func GridNumberNEQ(v int) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldGridNumber, v))
}

// GridNumberIn applies the In predicate on the "gridNumber" field.
func GridNumberIn(vs ...int) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldGridNumber, vs...))
}

// GridNumberNotIn applies the NotIn predicate on the "gridNumber" field.
func GridNumberNotIn(vs ...int) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldGridNumber, vs...))
}

// GridNumberGT applies the GT predicate on the "gridNumber" field.
func GridNumberGT(v int) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldGridNumber, v))
}

// GridNumberGTE applies the GTE predicate on the "gridNumber" field.
func GridNumberGTE(v int) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldGridNumber, v))
}

// GridNumberLT applies the LT predicate on the "gridNumber" field.
func GridNumberLT(v int) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldGridNumber, v))
}

// GridNumberLTE applies the LTE predicate on the "gridNumber" field.
func GridNumberLTE(v int) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldGridNumber, v))
}

// GridNumberIsNil applies the IsNil predicate on the "gridNumber" field.
func GridNumberIsNil() predicate.Order {
	return predicate.Order(sql.FieldIsNull(FieldGridNumber))
}

// GridNumberNotNil applies the NotNil predicate on the "gridNumber" field.
func GridNumberNotNil() predicate.Order {
	return predicate.Order(sql.FieldNotNull(FieldGridNumber))
}

// GridBuyCostEQ applies the EQ predicate on the "gridBuyCost" field.
func GridBuyCostEQ(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldGridBuyCost, v))
}

// GridBuyCostNEQ applies the NEQ predicate on the "gridBuyCost" field.
func GridBuyCostNEQ(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldGridBuyCost, v))
}

// GridBuyCostIn applies the In predicate on the "gridBuyCost" field.
func GridBuyCostIn(vs ...decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldGridBuyCost, vs...))
}

// GridBuyCostNotIn applies the NotIn predicate on the "gridBuyCost" field.
func GridBuyCostNotIn(vs ...decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldGridBuyCost, vs...))
}

// GridBuyCostGT applies the GT predicate on the "gridBuyCost" field.
func GridBuyCostGT(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldGridBuyCost, v))
}

// GridBuyCostGTE applies the GTE predicate on the "gridBuyCost" field.
func GridBuyCostGTE(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldGridBuyCost, v))
}

// GridBuyCostLT applies the LT predicate on the "gridBuyCost" field.
func GridBuyCostLT(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldGridBuyCost, v))
}

// GridBuyCostLTE applies the LTE predicate on the "gridBuyCost" field.
func GridBuyCostLTE(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldGridBuyCost, v))
}

// GridBuyCostContains applies the Contains predicate on the "gridBuyCost" field.
func GridBuyCostContains(v decimal.Decimal) predicate.Order {
	vc := v.String()
	return predicate.Order(sql.FieldContains(FieldGridBuyCost, vc))
}

// GridBuyCostHasPrefix applies the HasPrefix predicate on the "gridBuyCost" field.
func GridBuyCostHasPrefix(v decimal.Decimal) predicate.Order {
	vc := v.String()
	return predicate.Order(sql.FieldHasPrefix(FieldGridBuyCost, vc))
}

// GridBuyCostHasSuffix applies the HasSuffix predicate on the "gridBuyCost" field.
func GridBuyCostHasSuffix(v decimal.Decimal) predicate.Order {
	vc := v.String()
	return predicate.Order(sql.FieldHasSuffix(FieldGridBuyCost, vc))
}

// GridBuyCostIsNil applies the IsNil predicate on the "gridBuyCost" field.
func GridBuyCostIsNil() predicate.Order {
	return predicate.Order(sql.FieldIsNull(FieldGridBuyCost))
}

// GridBuyCostNotNil applies the NotNil predicate on the "gridBuyCost" field.
func GridBuyCostNotNil() predicate.Order {
	return predicate.Order(sql.FieldNotNull(FieldGridBuyCost))
}

// GridBuyCostEqualFold applies the EqualFold predicate on the "gridBuyCost" field.
func GridBuyCostEqualFold(v decimal.Decimal) predicate.Order {
	vc := v.String()
	return predicate.Order(sql.FieldEqualFold(FieldGridBuyCost, vc))
}

// GridBuyCostContainsFold applies the ContainsFold predicate on the "gridBuyCost" field.
func GridBuyCostContainsFold(v decimal.Decimal) predicate.Order {
	vc := v.String()
	return predicate.Order(sql.FieldContainsFold(FieldGridBuyCost, vc))
}

// StrategyIdEQ applies the EQ predicate on the "strategyId" field.
func StrategyIdEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldStrategyId, v))
}

// StrategyIdNEQ applies the NEQ predicate on the "strategyId" field.
func StrategyIdNEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldStrategyId, v))
}

// StrategyIdIn applies the In predicate on the "strategyId" field.
func StrategyIdIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldStrategyId, vs...))
}

// StrategyIdNotIn applies the NotIn predicate on the "strategyId" field.
func StrategyIdNotIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldStrategyId, vs...))
}

// StrategyIdGT applies the GT predicate on the "strategyId" field.
func StrategyIdGT(v string) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldStrategyId, v))
}

// StrategyIdGTE applies the GTE predicate on the "strategyId" field.
func StrategyIdGTE(v string) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldStrategyId, v))
}

// StrategyIdLT applies the LT predicate on the "strategyId" field.
func StrategyIdLT(v string) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldStrategyId, v))
}

// StrategyIdLTE applies the LTE predicate on the "strategyId" field.
func StrategyIdLTE(v string) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldStrategyId, v))
}

// StrategyIdContains applies the Contains predicate on the "strategyId" field.
func StrategyIdContains(v string) predicate.Order {
	return predicate.Order(sql.FieldContains(FieldStrategyId, v))
}

// StrategyIdHasPrefix applies the HasPrefix predicate on the "strategyId" field.
func StrategyIdHasPrefix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasPrefix(FieldStrategyId, v))
}

// StrategyIdHasSuffix applies the HasSuffix predicate on the "strategyId" field.
func StrategyIdHasSuffix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasSuffix(FieldStrategyId, v))
}

// StrategyIdEqualFold applies the EqualFold predicate on the "strategyId" field.
func StrategyIdEqualFold(v string) predicate.Order {
	return predicate.Order(sql.FieldEqualFold(FieldStrategyId, v))
}

// StrategyIdContainsFold applies the ContainsFold predicate on the "strategyId" field.
func StrategyIdContainsFold(v string) predicate.Order {
	return predicate.Order(sql.FieldContainsFold(FieldStrategyId, v))
}

// TypeEQ applies the EQ predicate on the "type" field.
func TypeEQ(v Type) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldType, v))
}

// TypeNEQ applies the NEQ predicate on the "type" field.
func TypeNEQ(v Type) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldType, v))
}

// TypeIn applies the In predicate on the "type" field.
func TypeIn(vs ...Type) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldType, vs...))
}

// TypeNotIn applies the NotIn predicate on the "type" field.
func TypeNotIn(vs ...Type) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldType, vs...))
}

// PriceEQ applies the EQ predicate on the "price" field.
func PriceEQ(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldPrice, v))
}

// PriceNEQ applies the NEQ predicate on the "price" field.
func PriceNEQ(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldPrice, v))
}

// PriceIn applies the In predicate on the "price" field.
func PriceIn(vs ...decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldPrice, vs...))
}

// PriceNotIn applies the NotIn predicate on the "price" field.
func PriceNotIn(vs ...decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldPrice, vs...))
}

// PriceGT applies the GT predicate on the "price" field.
func PriceGT(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldPrice, v))
}

// PriceGTE applies the GTE predicate on the "price" field.
func PriceGTE(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldPrice, v))
}

// PriceLT applies the LT predicate on the "price" field.
func PriceLT(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldPrice, v))
}

// PriceLTE applies the LTE predicate on the "price" field.
func PriceLTE(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldPrice, v))
}

// PriceContains applies the Contains predicate on the "price" field.
func PriceContains(v decimal.Decimal) predicate.Order {
	vc := v.String()
	return predicate.Order(sql.FieldContains(FieldPrice, vc))
}

// PriceHasPrefix applies the HasPrefix predicate on the "price" field.
func PriceHasPrefix(v decimal.Decimal) predicate.Order {
	vc := v.String()
	return predicate.Order(sql.FieldHasPrefix(FieldPrice, vc))
}

// PriceHasSuffix applies the HasSuffix predicate on the "price" field.
func PriceHasSuffix(v decimal.Decimal) predicate.Order {
	vc := v.String()
	return predicate.Order(sql.FieldHasSuffix(FieldPrice, vc))
}

// PriceEqualFold applies the EqualFold predicate on the "price" field.
func PriceEqualFold(v decimal.Decimal) predicate.Order {
	vc := v.String()
	return predicate.Order(sql.FieldEqualFold(FieldPrice, vc))
}

// PriceContainsFold applies the ContainsFold predicate on the "price" field.
func PriceContainsFold(v decimal.Decimal) predicate.Order {
	vc := v.String()
	return predicate.Order(sql.FieldContainsFold(FieldPrice, vc))
}

// FinalPriceEQ applies the EQ predicate on the "finalPrice" field.
func FinalPriceEQ(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldFinalPrice, v))
}

// FinalPriceNEQ applies the NEQ predicate on the "finalPrice" field.
func FinalPriceNEQ(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldFinalPrice, v))
}

// FinalPriceIn applies the In predicate on the "finalPrice" field.
func FinalPriceIn(vs ...decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldFinalPrice, vs...))
}

// FinalPriceNotIn applies the NotIn predicate on the "finalPrice" field.
func FinalPriceNotIn(vs ...decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldFinalPrice, vs...))
}

// FinalPriceGT applies the GT predicate on the "finalPrice" field.
func FinalPriceGT(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldFinalPrice, v))
}

// FinalPriceGTE applies the GTE predicate on the "finalPrice" field.
func FinalPriceGTE(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldFinalPrice, v))
}

// FinalPriceLT applies the LT predicate on the "finalPrice" field.
func FinalPriceLT(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldFinalPrice, v))
}

// FinalPriceLTE applies the LTE predicate on the "finalPrice" field.
func FinalPriceLTE(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldFinalPrice, v))
}

// FinalPriceContains applies the Contains predicate on the "finalPrice" field.
func FinalPriceContains(v decimal.Decimal) predicate.Order {
	vc := v.String()
	return predicate.Order(sql.FieldContains(FieldFinalPrice, vc))
}

// FinalPriceHasPrefix applies the HasPrefix predicate on the "finalPrice" field.
func FinalPriceHasPrefix(v decimal.Decimal) predicate.Order {
	vc := v.String()
	return predicate.Order(sql.FieldHasPrefix(FieldFinalPrice, vc))
}

// FinalPriceHasSuffix applies the HasSuffix predicate on the "finalPrice" field.
func FinalPriceHasSuffix(v decimal.Decimal) predicate.Order {
	vc := v.String()
	return predicate.Order(sql.FieldHasSuffix(FieldFinalPrice, vc))
}

// FinalPriceEqualFold applies the EqualFold predicate on the "finalPrice" field.
func FinalPriceEqualFold(v decimal.Decimal) predicate.Order {
	vc := v.String()
	return predicate.Order(sql.FieldEqualFold(FieldFinalPrice, vc))
}

// FinalPriceContainsFold applies the ContainsFold predicate on the "finalPrice" field.
func FinalPriceContainsFold(v decimal.Decimal) predicate.Order {
	vc := v.String()
	return predicate.Order(sql.FieldContainsFold(FieldFinalPrice, vc))
}

// InAmountEQ applies the EQ predicate on the "inAmount" field.
func InAmountEQ(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldInAmount, v))
}

// InAmountNEQ applies the NEQ predicate on the "inAmount" field.
func InAmountNEQ(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldInAmount, v))
}

// InAmountIn applies the In predicate on the "inAmount" field.
func InAmountIn(vs ...decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldInAmount, vs...))
}

// InAmountNotIn applies the NotIn predicate on the "inAmount" field.
func InAmountNotIn(vs ...decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldInAmount, vs...))
}

// InAmountGT applies the GT predicate on the "inAmount" field.
func InAmountGT(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldInAmount, v))
}

// InAmountGTE applies the GTE predicate on the "inAmount" field.
func InAmountGTE(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldInAmount, v))
}

// InAmountLT applies the LT predicate on the "inAmount" field.
func InAmountLT(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldInAmount, v))
}

// InAmountLTE applies the LTE predicate on the "inAmount" field.
func InAmountLTE(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldInAmount, v))
}

// InAmountContains applies the Contains predicate on the "inAmount" field.
func InAmountContains(v decimal.Decimal) predicate.Order {
	vc := v.String()
	return predicate.Order(sql.FieldContains(FieldInAmount, vc))
}

// InAmountHasPrefix applies the HasPrefix predicate on the "inAmount" field.
func InAmountHasPrefix(v decimal.Decimal) predicate.Order {
	vc := v.String()
	return predicate.Order(sql.FieldHasPrefix(FieldInAmount, vc))
}

// InAmountHasSuffix applies the HasSuffix predicate on the "inAmount" field.
func InAmountHasSuffix(v decimal.Decimal) predicate.Order {
	vc := v.String()
	return predicate.Order(sql.FieldHasSuffix(FieldInAmount, vc))
}

// InAmountEqualFold applies the EqualFold predicate on the "inAmount" field.
func InAmountEqualFold(v decimal.Decimal) predicate.Order {
	vc := v.String()
	return predicate.Order(sql.FieldEqualFold(FieldInAmount, vc))
}

// InAmountContainsFold applies the ContainsFold predicate on the "inAmount" field.
func InAmountContainsFold(v decimal.Decimal) predicate.Order {
	vc := v.String()
	return predicate.Order(sql.FieldContainsFold(FieldInAmount, vc))
}

// OutAmountEQ applies the EQ predicate on the "outAmount" field.
func OutAmountEQ(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldOutAmount, v))
}

// OutAmountNEQ applies the NEQ predicate on the "outAmount" field.
func OutAmountNEQ(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldOutAmount, v))
}

// OutAmountIn applies the In predicate on the "outAmount" field.
func OutAmountIn(vs ...decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldOutAmount, vs...))
}

// OutAmountNotIn applies the NotIn predicate on the "outAmount" field.
func OutAmountNotIn(vs ...decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldOutAmount, vs...))
}

// OutAmountGT applies the GT predicate on the "outAmount" field.
func OutAmountGT(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldOutAmount, v))
}

// OutAmountGTE applies the GTE predicate on the "outAmount" field.
func OutAmountGTE(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldOutAmount, v))
}

// OutAmountLT applies the LT predicate on the "outAmount" field.
func OutAmountLT(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldOutAmount, v))
}

// OutAmountLTE applies the LTE predicate on the "outAmount" field.
func OutAmountLTE(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldOutAmount, v))
}

// OutAmountContains applies the Contains predicate on the "outAmount" field.
func OutAmountContains(v decimal.Decimal) predicate.Order {
	vc := v.String()
	return predicate.Order(sql.FieldContains(FieldOutAmount, vc))
}

// OutAmountHasPrefix applies the HasPrefix predicate on the "outAmount" field.
func OutAmountHasPrefix(v decimal.Decimal) predicate.Order {
	vc := v.String()
	return predicate.Order(sql.FieldHasPrefix(FieldOutAmount, vc))
}

// OutAmountHasSuffix applies the HasSuffix predicate on the "outAmount" field.
func OutAmountHasSuffix(v decimal.Decimal) predicate.Order {
	vc := v.String()
	return predicate.Order(sql.FieldHasSuffix(FieldOutAmount, vc))
}

// OutAmountEqualFold applies the EqualFold predicate on the "outAmount" field.
func OutAmountEqualFold(v decimal.Decimal) predicate.Order {
	vc := v.String()
	return predicate.Order(sql.FieldEqualFold(FieldOutAmount, vc))
}

// OutAmountContainsFold applies the ContainsFold predicate on the "outAmount" field.
func OutAmountContainsFold(v decimal.Decimal) predicate.Order {
	vc := v.String()
	return predicate.Order(sql.FieldContainsFold(FieldOutAmount, vc))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v Status) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v Status) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...Status) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...Status) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldStatus, vs...))
}

// NonceEQ applies the EQ predicate on the "nonce" field.
func NonceEQ(v uint64) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldNonce, v))
}

// NonceNEQ applies the NEQ predicate on the "nonce" field.
func NonceNEQ(v uint64) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldNonce, v))
}

// NonceIn applies the In predicate on the "nonce" field.
func NonceIn(vs ...uint64) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldNonce, vs...))
}

// NonceNotIn applies the NotIn predicate on the "nonce" field.
func NonceNotIn(vs ...uint64) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldNonce, vs...))
}

// NonceGT applies the GT predicate on the "nonce" field.
func NonceGT(v uint64) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldNonce, v))
}

// NonceGTE applies the GTE predicate on the "nonce" field.
func NonceGTE(v uint64) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldNonce, v))
}

// NonceLT applies the LT predicate on the "nonce" field.
func NonceLT(v uint64) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldNonce, v))
}

// NonceLTE applies the LTE predicate on the "nonce" field.
func NonceLTE(v uint64) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldNonce, v))
}

// TxHashEQ applies the EQ predicate on the "txHash" field.
func TxHashEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldTxHash, v))
}

// TxHashNEQ applies the NEQ predicate on the "txHash" field.
func TxHashNEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldTxHash, v))
}

// TxHashIn applies the In predicate on the "txHash" field.
func TxHashIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldTxHash, vs...))
}

// TxHashNotIn applies the NotIn predicate on the "txHash" field.
func TxHashNotIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldTxHash, vs...))
}

// TxHashGT applies the GT predicate on the "txHash" field.
func TxHashGT(v string) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldTxHash, v))
}

// TxHashGTE applies the GTE predicate on the "txHash" field.
func TxHashGTE(v string) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldTxHash, v))
}

// TxHashLT applies the LT predicate on the "txHash" field.
func TxHashLT(v string) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldTxHash, v))
}

// TxHashLTE applies the LTE predicate on the "txHash" field.
func TxHashLTE(v string) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldTxHash, v))
}

// TxHashContains applies the Contains predicate on the "txHash" field.
func TxHashContains(v string) predicate.Order {
	return predicate.Order(sql.FieldContains(FieldTxHash, v))
}

// TxHashHasPrefix applies the HasPrefix predicate on the "txHash" field.
func TxHashHasPrefix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasPrefix(FieldTxHash, v))
}

// TxHashHasSuffix applies the HasSuffix predicate on the "txHash" field.
func TxHashHasSuffix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasSuffix(FieldTxHash, v))
}

// TxHashEqualFold applies the EqualFold predicate on the "txHash" field.
func TxHashEqualFold(v string) predicate.Order {
	return predicate.Order(sql.FieldEqualFold(FieldTxHash, v))
}

// TxHashContainsFold applies the ContainsFold predicate on the "txHash" field.
func TxHashContainsFold(v string) predicate.Order {
	return predicate.Order(sql.FieldContainsFold(FieldTxHash, v))
}

// ReasonEQ applies the EQ predicate on the "reason" field.
func ReasonEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldReason, v))
}

// ReasonNEQ applies the NEQ predicate on the "reason" field.
func ReasonNEQ(v string) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldReason, v))
}

// ReasonIn applies the In predicate on the "reason" field.
func ReasonIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldReason, vs...))
}

// ReasonNotIn applies the NotIn predicate on the "reason" field.
func ReasonNotIn(vs ...string) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldReason, vs...))
}

// ReasonGT applies the GT predicate on the "reason" field.
func ReasonGT(v string) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldReason, v))
}

// ReasonGTE applies the GTE predicate on the "reason" field.
func ReasonGTE(v string) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldReason, v))
}

// ReasonLT applies the LT predicate on the "reason" field.
func ReasonLT(v string) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldReason, v))
}

// ReasonLTE applies the LTE predicate on the "reason" field.
func ReasonLTE(v string) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldReason, v))
}

// ReasonContains applies the Contains predicate on the "reason" field.
func ReasonContains(v string) predicate.Order {
	return predicate.Order(sql.FieldContains(FieldReason, v))
}

// ReasonHasPrefix applies the HasPrefix predicate on the "reason" field.
func ReasonHasPrefix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasPrefix(FieldReason, v))
}

// ReasonHasSuffix applies the HasSuffix predicate on the "reason" field.
func ReasonHasSuffix(v string) predicate.Order {
	return predicate.Order(sql.FieldHasSuffix(FieldReason, v))
}

// ReasonEqualFold applies the EqualFold predicate on the "reason" field.
func ReasonEqualFold(v string) predicate.Order {
	return predicate.Order(sql.FieldEqualFold(FieldReason, v))
}

// ReasonContainsFold applies the ContainsFold predicate on the "reason" field.
func ReasonContainsFold(v string) predicate.Order {
	return predicate.Order(sql.FieldContainsFold(FieldReason, v))
}

// ProfitEQ applies the EQ predicate on the "profit" field.
func ProfitEQ(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldEQ(FieldProfit, v))
}

// ProfitNEQ applies the NEQ predicate on the "profit" field.
func ProfitNEQ(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldNEQ(FieldProfit, v))
}

// ProfitIn applies the In predicate on the "profit" field.
func ProfitIn(vs ...decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldIn(FieldProfit, vs...))
}

// ProfitNotIn applies the NotIn predicate on the "profit" field.
func ProfitNotIn(vs ...decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldNotIn(FieldProfit, vs...))
}

// ProfitGT applies the GT predicate on the "profit" field.
func ProfitGT(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldGT(FieldProfit, v))
}

// ProfitGTE applies the GTE predicate on the "profit" field.
func ProfitGTE(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldGTE(FieldProfit, v))
}

// ProfitLT applies the LT predicate on the "profit" field.
func ProfitLT(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldLT(FieldProfit, v))
}

// ProfitLTE applies the LTE predicate on the "profit" field.
func ProfitLTE(v decimal.Decimal) predicate.Order {
	return predicate.Order(sql.FieldLTE(FieldProfit, v))
}

// ProfitContains applies the Contains predicate on the "profit" field.
func ProfitContains(v decimal.Decimal) predicate.Order {
	vc := v.String()
	return predicate.Order(sql.FieldContains(FieldProfit, vc))
}

// ProfitHasPrefix applies the HasPrefix predicate on the "profit" field.
func ProfitHasPrefix(v decimal.Decimal) predicate.Order {
	vc := v.String()
	return predicate.Order(sql.FieldHasPrefix(FieldProfit, vc))
}

// ProfitHasSuffix applies the HasSuffix predicate on the "profit" field.
func ProfitHasSuffix(v decimal.Decimal) predicate.Order {
	vc := v.String()
	return predicate.Order(sql.FieldHasSuffix(FieldProfit, vc))
}

// ProfitIsNil applies the IsNil predicate on the "profit" field.
func ProfitIsNil() predicate.Order {
	return predicate.Order(sql.FieldIsNull(FieldProfit))
}

// ProfitNotNil applies the NotNil predicate on the "profit" field.
func ProfitNotNil() predicate.Order {
	return predicate.Order(sql.FieldNotNull(FieldProfit))
}

// ProfitEqualFold applies the EqualFold predicate on the "profit" field.
func ProfitEqualFold(v decimal.Decimal) predicate.Order {
	vc := v.String()
	return predicate.Order(sql.FieldEqualFold(FieldProfit, vc))
}

// ProfitContainsFold applies the ContainsFold predicate on the "profit" field.
func ProfitContainsFold(v decimal.Decimal) predicate.Order {
	vc := v.String()
	return predicate.Order(sql.FieldContainsFold(FieldProfit, vc))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Order) predicate.Order {
	return predicate.Order(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Order) predicate.Order {
	return predicate.Order(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Order) predicate.Order {
	return predicate.Order(sql.NotPredicates(p))
}
